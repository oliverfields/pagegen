#!/usr/bin/python

from Utility import report_error, report_notice, load_config, get_site_conf_path, PAGEGENCONF, SITECONF, HOME, CONFROOT, TARGETDIR, HOOKDIR, CONTENTDIR
from os.path import expanduser, basename, join, isfile
from os import getcwd, listdir, sep, access, X_OK, putenv, chdir
from sys import exit, argv
from distutils.dir_util import copy_tree
from Site import Site
from subprocess import call

# Variables
verbose=False


def usage(exit_after=True):
	print 'Usage: %s [init]' % (basename(argv[0]))

	if exit_after:
		exit(0)


def exec_hook(hook):
	''' Run specified hook if executable '''
	if isfile(hook) and access(hook, X_OK):
		try:
			call(hook)
		except Exception as e:
			report_error(1,"Hook '%s' execution failed: %s" % (hook, e))


def gen_mode():
	site_conf_path=get_site_conf_path()

	if not site_conf_path:
		report_error(1, "Not in pagegen directory tree, unable to find site.conf in current folder or parent folders")

	site_dir=site_conf_path[:-len(sep+SITECONF)]

	try:
		s=Site(site_dir, site_conf_path)
		chdir(site_dir)
	except Exception as e:
		report_error(1, "Unable to load site: %s" % e)

	# Set environment variable for hooks
	putenv('PAGEGEN_SITE_DIR', site_dir)
	putenv('PAGEGEN_SOURCE_DIR', join(site_dir, CONTENTDIR))
	putenv('PAGEGEN_TARGET_DIR', join(site_dir, TARGETDIR))

	# Run pre hook
	exec_hook(join(site_dir,HOOKDIR,'pre_generate'))

	try:
		s.generate_pages(s.pages)
	except Exception as e:
		report_error(1, "Unable to generate site: %s" % e)

	if s.exclude_sitemap != True:
		try:
			s.generate_sitemap(s.pages)
		except Exception as e:
			report_error(1, "Unable to generate sitemap.xml: %s" % e)

	try:
		s.move_to_target()
	except Exception as e:
		report_error(1, "Unable to copy to target directory '%s': %s" % (s.target_dir, e))

	# Run post hook
	exec_hook(join(site_dir,HOOKDIR,'post_generate'))


def init_mode(config):
	''' Copy skeleton directory to current directory for basic setup '''

	skel_dir=config.get(CONFROOT, 'skel_dir')
	root_dir=getcwd()

	if listdir(root_dir):
		report_error(1,"Cannot init non empty directory '%s'" % root_dir)

	try:
		copy_tree(skel_dir, root_dir)
	except Exception as e:
		report_error(1, "Unable to copy '%s' to '%s': %s" % (skel_dir, root_dir, e))


# Parse CLI arguments
if __name__ == '__main__':

	possible_configs=[
		getcwd()+sep+PAGEGENCONF,
		HOME+sep+'.config'+sep+PAGEGENCONF,
		sep+'etc'+sep+PAGEGENCONF
	]

	config=load_config(possible_configs)

	try:
		sys.path.append(config.get(CONFROOT, 'lib_dir'))
	except:
		pass

	if len(argv) == 1:
		gen_mode()
	elif len(argv) == 2:
		try:
			
			if argv[1] != "init":
				usage
		except:
			usage
		init_mode(config)
	else:
		usage(False)
		report_error(1, 'Unknown mode "%s"' % mode)